buildscript {
  ext.kotlin_version = '0.11.91.1'

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
plugins {
  id "com.jfrog.bintray" version "1.0"
}

allprojects {
  apply plugin: 'java'
}

subprojects {
  apply plugin: 'kotlin'

  repositories {
    mavenCentral()
  }

  sourceCompatibility = '1.6'
  dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.slf4j:slf4j-api:1.7.12'
  }
}

task fatJar(type: Jar) {
  subprojects {
    dependsOn it.classes
  }
  manifest {
    attributes 'Main-Class': 'org.jetbrains.intellij.pluginRepository.Uploader'
  }
  subprojects { project ->
    from { project.configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
  }
}

group = 'org.jetbrains.intellij'
if (hasProperty("buildNumber")) {
  version = "0.1.$buildNumber"
}
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
  subprojects {
    from it.sourceSets.main.kotlin
  }
}
artifacts {
  archives sourceJar, fatJar
}
publishing {
  publications {
    mavenJava(MavenPublication) {
      from project(':rest').components.java
      artifact sourceJar {
        classifier "sources"
      }
      artifact fatJar {
        classifier "all"
      }
    }
  }
}
if (hasProperty("bintrayUser")) {
  bintray {
    user = bintrayUser
    key = bintrayApiKey
    publish = true
    publications = ['mavenJava']
    pkg {
      userOrg = "jetbrains"
      repo = "plugin-repository-rest-client"
      name = "plugin-repository-rest-client"
      version {
        name = "0.1.$buildNumber"
      }
    }
  }
}
